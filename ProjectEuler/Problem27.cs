using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Runtime.Intrinsics.X86;
using System.Text;
using System.Threading.Tasks;

namespace ProjectEuler
{
    public static class Problem27
    {
        // Find the product of the coefficients a and b, and , for the quadratic expression that produces the maximum number of primes for consecutive values of n, starting with n = 0.

        // program iterates over all possible values of a and b, and counts the number of consecutive prime numbers generated by the quadratic formula n^2 + a*n + b, where n starts at 0 and increments until a non-prime number is generated.
        // it keeps track of the values of a and b that generate the most consecutive primes.
        public static void Run()
        {
            int maxN = 0, maxA = 0, maxB = 0;
            for (int a = -999; a < 1000; a++)
            {
                for (int b = -1000; b <= 1000; b++)
                {
                    int n = CountPrimes(a, b);
                    if (n > maxN)
                    {
                        maxN = n;
                        maxA = a;
                        maxB = b;
                    }
                }
            }
            Console.WriteLine(maxA * maxB);
            Console.ReadLine();
        }

        static int CountPrimes(int a, int b)
        {
            int n = 0;
            while (IsPrime(n * n + a * n + b))
            {
                n++;
            }
            return n;
        }

        // check if a given number is prime, by iterating over all integers from 2 to the square root of the number
        static bool IsPrime(int number)
        {
            if (number < 2) return false;
            for (int i = 2; i <= Math.Sqrt(number); i++)
            {
                if (number % i == 0) return false;
            }
            return true;
        }
    }
}